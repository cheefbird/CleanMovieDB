//
//  MoviesWorker.swift
//  CleanMovieDB
//
//  Created by Francis Breidenbach on 10/31/17.
//  Copyright (c) 2017 Francis Breidenbach. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import Alamofire
import ObjectMapper

protocol MoviesWorkerType {
  
  func fetchMovies(forPage page: Int?, completionHandler: @escaping MoviesResult)
  
  func fetchFavoriteMovies(completionHandler: @escaping MoviesResult)

}


class MoviesWorker: MoviesWorkerType {
  
  static let shared = MoviesWorker()
  
  private init() {
    realmService = RealmMovieService()
    apiService = APIMovieService()
  }

  var realmService: MovieServiceType
  var apiService: MovieServiceType
  
  func fetchMovies(forPage page: Int?, completionHandler: @escaping MoviesResult) {
    
    guard let page = page, page > 0 else {
      print("Fetching from Realm ...")
      
      realmService.getMovies(forPage: nil) { (movies, error) in
        completionHandler(movies, error)
      }
      
      return
    }
    
    print("Fetching from API ...")
    apiService.getMovies(forPage: page, completionHandler: completionHandler)
    
  }
  
  func fetchFavoriteMovies(completionHandler: @escaping MoviesResult) {
    realmService.getFavoriteMovies { (movies, error) in
      guard error == nil else {
        completionHandler([], error)
        return
      }
      
      completionHandler(movies, nil)
    }
  }
  
  func fetchReviews(forMovie movie: MovieObject, completionHandler: @escaping ReviewsResult) {
    
    apiService.getReviews(forMovie: movie, completionHandler: completionHandler)
    
  }
  
  func checkFavoriteStatus(ofMovie movie: MovieObject) -> Bool {
    return realmService.getFavoriteStatus(forMovie: movie)
  }
  
  func toggleFavorite(forMovieID id: Int, resultHandler: (Bool) -> Void) {
    realmService.toggleFavorite(forMovieID: id, resultHandler: resultHandler)
  }

}
